variables:
  - name: tfVersion
    value: 1.5.7
  - name: checkovVersion
    value: 3.2.403

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Validate
  displayName: Terraform Validation
  jobs:
  - job: Validate
    pool: 
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      fetchDepth: 1

    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: $(tfVersion)

    - script: terraform init -backend-config=environments/prod/backend.tfvars
      displayName: 'Terraform Init'
      workingDirectory: infra
      env:
        ARM_ACCESS_KEY: $(storageAccountKey)

    - script: terraform validate
      displayName: 'Terraform Validate'
      workingDirectory: infra

- stage: SecurityScan
  displayName: Checkov Scan
  dependsOn: Validate
  jobs:
  - job: Checkov
    pool: 
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      fetchDepth: 1

    - script: |
        docker run \
        -v $(System.DefaultWorkingDirectory)/infra:/iac \
        bridgecrew/checkov:$(checkovVersion) \
        -d /iac \
        --output junitxml \
        --soft-fail > $(Build.SourcesDirectory)/checkov.xml
      displayName: 'Run Checkov Scan'

    - task: PublishTestResults@2
      displayName: 'Publish Checkov Results'
      inputs:
        testResultsFiles: 'checkov.xml'
        testRunTitle: 'Checkov Security Scan'

- stage: TerraformPlan
  displayName: "Terraform Plan Stage"
  dependsOn: SecurityScan
  jobs:
    - job: Plan
      steps:
        - checkout: self
        - task: TerraformInstaller@0
          displayName: "Install Terraform"
          inputs:
            terraformVersion: $(tfVersion)
        - script: |
            terraform init
            terraform plan -out=tfplan
          displayName: "Run Terraform Plan"
        - task: PublishBuildArtifacts@1
          displayName: "Publish Terraform Plan Artifact"
          inputs:
            PathtoPublish: "$(Build.SourcesDirectory)/tfplan"
            artifactName: "tfplan"
            publishLocation: Container

- stage: ManualApproval
  displayName: "Manual Approval Stage"
  jobs:
    - job: WaitApproval
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: ManualValidation@0
          displayName: "Pause for Manual Approval"
          inputs:
            notifyUsers: "approver@example.com"
            instructions: "Terraform plan stage output has to be reviewed before applying."
            timeoutInMinutes: 60
            onTimeout: reject

- stage: TerraformApply
  displayName: "Terraform Apply Stage"
  dependsOn: ManualApproval
  jobs:
    - job: Apply
      steps:
        - checkout: self
        - task: TerraformInstaller@0
          displayName: "Install Terraform"
          inputs:
            terraformVersion: $(tfVersion)
        - task: DownloadBuildArtifacts@0
          displayName: "Download Terraform Plan Artifact"
          inputs:
            buildType: specific
            artifactName: "tfplan"
            downloadPath: "$(Pipeline.Workspace)"
        - script: |
            terraform init
            terraform apply -auto-approve "$(Pipeline.Workspace)/tfplan/tfplan"
          displayName: "Run Terraform Apply"
